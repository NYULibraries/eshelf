# Gather the IDs for the various collection controls
gather_ids = (event)->
  # Get the checked IDs
  checked_ids = $("input[name='id[]']:checked")
  if checked_ids.length is 0
    $("#select_something").show()
    # http://stackoverflow.com/questions/1357118/event-preventdefault-vs-return-false
    return false
  $("#select_something").hide()
  # Add question mark if necessary
  event.target.href += "?" unless event.target.href.match '\\?'
  # Get the expired data
  expired_data = $(event.target).attr("data-expired")
  # Remove the expired data, if there is any
  event.target.href = event.target.href.replace(expired_data, "") if expired_data
  # Append the checkedIDs to the URL.
  event.target.href += $.param(checked_ids)
  # Expire this data
  $(event.target).attr("data-expired", $.param(checked_ids))

toggle_all = (event) ->
  if event.target.checked
    select_all()
    true
  else
    select_none()
    true

select_all = (event)->
  $("input[name='id[]']:not(:checked)").trigger('click') unless event?
  $($("input#select:not(:checked)")).trigger('click') if event?
  false

select_none = (event)->
  $("input[name='id[]']:checked").trigger('click') unless event?
  $($("input#select:checked")).trigger('click') if event?
  false

$ ->
  # The controls that we are enabling...
  collection_controls = ["delete", "refworks", "endnote", "easybib", "ris", "bibtex"]
  # ...need to gather IDs on click.
  $("##{collection_controls.join(",#")}").click(gather_ids)
  $(".email").click(gather_ids)
  $(".print").click(gather_ids)
  $("input[name='id[]']").click (event) -> $("#select_something").hide()
  $("input#select").click (event) -> toggle_all(event)
  $(".select-all").click (event) -> select_all(event)
  $(".select-none").click (event) -> select_none(event)
